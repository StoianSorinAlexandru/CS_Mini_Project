// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using miniProiect.Data;

#nullable disable

namespace miniProiect.Migrations
{
    [DbContext(typeof(MiniProjectContext))]
    [Migration("20241229171331_Implementare Intrari")]
    partial class ImplementareIntrari
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("miniProiect.Models.Gestiune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntrariGestiuneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntrariGestiuneId");

                    b.ToTable("Gestiune");
                });

            modelBuilder.Entity("miniProiect.Models.Intrari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdGestiune")
                        .HasColumnType("int");

                    b.Property<int?>("IdPartner")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGestiune");

                    b.HasIndex("IdPartner");

                    b.ToTable("Intrari");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariDetaliu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cantitate")
                        .HasColumnType("real");

                    b.Property<int?>("IdIntrariDetaliuProdus")
                        .HasColumnType("int");

                    b.Property<int?>("IntrariId")
                        .HasColumnType("int");

                    b.Property<float>("Valoare")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdIntrariDetaliuProdus");

                    b.HasIndex("IntrariId");

                    b.ToTable("IntrariDetaliu");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariDetaliuProdus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("IntrariDetaliuProdus");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariGestiune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("intrariGestiunes");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariParteneri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("intrariParteneris");
                });

            modelBuilder.Entity("miniProiect.Models.Partener", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdIntrari")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIntrari");

                    b.ToTable("Partener");
                });

            modelBuilder.Entity("miniProiect.Models.Produs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntrariDetaliuProdusId")
                        .HasColumnType("int");

                    b.Property<float?>("PretUnitar")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IntrariDetaliuProdusId");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("miniProiect.Models.Gestiune", b =>
                {
                    b.HasOne("miniProiect.Models.IntrariGestiune", null)
                        .WithMany("GestiuneList")
                        .HasForeignKey("IntrariGestiuneId");
                });

            modelBuilder.Entity("miniProiect.Models.Intrari", b =>
                {
                    b.HasOne("miniProiect.Models.IntrariGestiune", "IntrariGestiune")
                        .WithMany()
                        .HasForeignKey("IdGestiune");

                    b.HasOne("miniProiect.Models.IntrariParteneri", "IntrariParteneri")
                        .WithMany()
                        .HasForeignKey("IdPartner");

                    b.Navigation("IntrariGestiune");

                    b.Navigation("IntrariParteneri");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariDetaliu", b =>
                {
                    b.HasOne("miniProiect.Models.IntrariDetaliuProdus", "IntrariDetaliuProdus")
                        .WithMany()
                        .HasForeignKey("IdIntrariDetaliuProdus");

                    b.HasOne("miniProiect.Models.Intrari", "Intrari")
                        .WithMany()
                        .HasForeignKey("IntrariId");

                    b.Navigation("Intrari");

                    b.Navigation("IntrariDetaliuProdus");
                });

            modelBuilder.Entity("miniProiect.Models.Partener", b =>
                {
                    b.HasOne("miniProiect.Models.IntrariParteneri", "IntrariParteneri")
                        .WithMany("parteners")
                        .HasForeignKey("IdIntrari");

                    b.Navigation("IntrariParteneri");
                });

            modelBuilder.Entity("miniProiect.Models.Produs", b =>
                {
                    b.HasOne("miniProiect.Models.IntrariDetaliuProdus", null)
                        .WithMany("ProdusList")
                        .HasForeignKey("IntrariDetaliuProdusId");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariDetaliuProdus", b =>
                {
                    b.Navigation("ProdusList");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariGestiune", b =>
                {
                    b.Navigation("GestiuneList");
                });

            modelBuilder.Entity("miniProiect.Models.IntrariParteneri", b =>
                {
                    b.Navigation("parteners");
                });
#pragma warning restore 612, 618
        }
    }
}
